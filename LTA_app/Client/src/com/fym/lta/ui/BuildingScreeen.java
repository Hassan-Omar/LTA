
package com.fym.lta.ui;

import com.fym.lta.bao.BaoFactory;
import com.fym.lta.bao.BuildingBao;
import com.fym.lta.dto.BuildingDto;

import java.util.List;

import javax.swing.JOptionPane;

/**
 *
 * @author karima
 */
public class BuildingScreeen extends javax.swing.JPanel {
    
   BuildingBao buildingBaoObject = new BaoFactory().createBuildingBao();


    /** Creates new form Building */
    public BuildingScreeen() {
        initComponents();
        //if (buildingBaoObject.listBuilding()!=null)
            buildingTableReset(buildingBaoObject.listBuilding());
        BuildingTable.repaint();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BuildingTable = new javax.swing.JTable();
        ubdateBuildingBTN = new javax.swing.JButton();
        deleteBuildingBTN = new javax.swing.JButton();
        BuildingEnteredCode = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        insertBuildingBTN = new javax.swing.JButton();
        searchBuildingBTN = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Building", 0, 0, new java.awt.Font("Adobe Arabic", 1, 24))); // NOI18N

        BuildingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Code", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        BuildingTable.setRowHeight(20);
        jScrollPane1.setViewportView(BuildingTable);
        BuildingTable.getColumnModel().getColumn(0).setHeaderValue("ID");
        BuildingTable.getColumnModel().getColumn(1).setHeaderValue("Code");
        BuildingTable.getColumnModel().getColumn(2).setHeaderValue("Description");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        ubdateBuildingBTN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ubdateBuildingBTN.setText("Update");
        ubdateBuildingBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubdateBuildingBTNActionPerformed(evt);
            }
        });

        deleteBuildingBTN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deleteBuildingBTN.setLabel("Delete");
        deleteBuildingBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBuildingBTNMouseClicked(evt);
            }
        });

        BuildingEnteredCode.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BuildingEnteredCode.setText(" ");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Enter Building Code ");

        insertBuildingBTN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        insertBuildingBTN.setText("Insert  New Building");
        insertBuildingBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insertBuildingBTNMouseClicked(evt);
            }
        });
        insertBuildingBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertBuildingBTNActionPerformed(evt);
            }
        });

        searchBuildingBTN.setText("Search");
        searchBuildingBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchBuildingBTNMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(BuildingEnteredCode, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(67, 67, 67)
                                        .addComponent(searchBuildingBTN))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ubdateBuildingBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(138, 138, 138)
                                .addComponent(deleteBuildingBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(141, 141, 141)
                                .addComponent(insertBuildingBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 162, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BuildingEnteredCode, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBuildingBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ubdateBuildingBTN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deleteBuildingBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(insertBuildingBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName("Building ");
    }//GEN-END:initComponents
//Update Buttom
    private void ubdateBuildingBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubdateBuildingBTNActionPerformed
       /* BuildingInsertUpdate uIScreen  = new BuildingInsertUpdate();
        uIScreen.setBuildingUpdateId(Integer.parseInt(BuildingTable.getValueAt(BuildingTable.getSelectedRow(), 4).toString())); //Pass the ID
        uIScreen.setBuildingUpdateCode(BuildingTable.getValueAt(BuildingTable.getSelectedRow(), 1).toString()); // pass the code
        uIScreen.setBuildingUpdateDescription(BuildingTable.getValueAt(BuildingTable.getSelectedRow(), 1).toString()); // pass the description
        UsersScreen.createPopupMenu(uIScreen);*/

    }//GEN-LAST:event_ubdateBuildingBTNActionPerformed

    private void deleteBuildingBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBuildingBTNMouseClicked
     
     int  selectedBuildingid = Integer.parseInt(BuildingTable.getValueAt(BuildingTable.getSelectedRow(), 0).toString());
       BuildingDto selectedBuilding_Delete = new BuildingDto(); // this Building i want to delete
      selectedBuilding_Delete.setBuilding_id(selectedBuildingid);
        // call business to delete
        // don't forget you need to update the users table and remove this record
        // and check the returned value to tell the user if the delete is done or not
      if (buildingBaoObject.deleteBuilding(selectedBuilding_Delete)) {
            int msgRes =
            JOptionPane.showOptionDialog(null, "Deleted Successfully ", "Building Deleting ",
                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null,
                null);

            if (msgRes == JOptionPane.OK_OPTION) {
                buildingTableReset(buildingBaoObject.listBuilding());
                BuildingTable.repaint() ;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Can not delete may be deleted using another user ");
        }

    }//GEN-LAST:event_deleteBuildingBTNMouseClicked

    private void insertBuildingBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertBuildingBTNMouseClicked
    UsersScreen.createPopupMenu(new BuildingInsertUpdate ());
    }//GEN-LAST:event_insertBuildingBTNMouseClicked

    private void searchBuildingBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBuildingBTNMouseClicked
        if (BuildingEnteredCode.getText()!= null )
            buildingTableReset( buildingBaoObject.SearchBuilding(BuildingEnteredCode.getText())) ;
        else
        buildingTableReset( buildingBaoObject.listBuilding()) ;
      
    }//GEN-LAST:event_searchBuildingBTNMouseClicked

    private void insertBuildingBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertBuildingBTNActionPerformed
       
      
        
    }//GEN-LAST:event_insertBuildingBTNActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BuildingEnteredCode;
    private javax.swing.JTable BuildingTable;
    private javax.swing.JButton deleteBuildingBTN;
    private javax.swing.JButton insertBuildingBTN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchBuildingBTN;
    private javax.swing.JButton ubdateBuildingBTN;
    // End of variables declaration//GEN-END:variables





    public void buildingTableReset(List<BuildingDto> buildings) {
        int userRoleid;
        Object[][] usersArr = new Object[buildings.size()][3];

        for (int i = 0; i < buildings.size(); i++) {
            usersArr[i][0] = buildings.get(i).getBuilding_id();
            usersArr[i][1] = buildings.get(i).getCode();
            usersArr[i][2] = buildings.get(i).getDescription();
       
        }
        BuildingTable.setModel(new javax.swing.table.DefaultTableModel(usersArr, new String[] {
                                                                    "ID", "CODE", "DESCRIPTION"
            }));
    }




}
